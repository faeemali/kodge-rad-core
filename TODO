- messages must be given an alias/type_prefix. If present, the router can perform additional
  filtering using this field to determine which source messages must be routed to destinations.
  If not present, this can be ignored. Alternatively, this can be calculated by
  letting every message include the app name, message type, and optional prefix/alias/whatever
  info.
  Additionally, this implies that for a single app, there may be multiple entries in the
  routing table, for different message types
- add a message id to allow for sync message processing. the message id is optional. If
  it exists, any subsequent messages must preserve the message id. For apps that rx
  a message and produce a tx response, the message id must be preserved by the app. For
  start_stop containers that integrate with stdin/stdout, the container must preserve the
  message id for the tx message
- consider implementing xargs-style functionality for start_stop containers
- !!!(necessary?) include the workflow id in messages, to allow for inter-workflow routing
- add apps
- maybe add a runtime file for later termination of apps
- build a ui
- build server framework to download apps from the web (plugin framework)
- add in licensing support


Sample app:
- webserver with 2 endpoints (e1, e2)
- e1 goes to an app/script (stdin/stdout)
- e2 dumps to a sqlite db